# Multi-stage production Dockerfile
FROM python:3.11-slim AS builder

# Install system dependencies for building
RUN apt-get update && apt-get install -y \
    build-essential \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Create app directory
WORKDIR /app

# Copy requirements and install Python dependencies
COPY requirements.txt .
RUN pip install --no-cache-dir --user -r requirements.txt

# Production stage
FROM python:3.11-slim AS production

# Install runtime dependencies
RUN apt-get update && apt-get install -y \
    curl \
    postgresql-client \
    && rm -rf /var/lib/apt/lists/*

# Create non-root user
RUN groupadd -r betting && useradd -r -g betting betting

# Set work directory
WORKDIR /app

# Copy Python dependencies from builder stage
COPY --from=builder /root/.local /home/betting/.local

# Copy application code
COPY --chown=betting:betting . .

# Create logs directory
RUN mkdir -p logs && chown betting:betting logs

# Make sure scripts are executable
RUN chmod +x scripts/*.sh

# Switch to non-root user
USER betting

# Add local bin to PATH
ENV PATH=/home/betting/.local/bin:$PATH

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=40s --retries=3 \
    CMD curl -f http://localhost:8000/health || exit 1

# Expose port
EXPOSE 8000

# Production startup script
CMD ["./scripts/start-prod.sh"]