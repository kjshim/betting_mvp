"""Add auth and onramp tables

Revision ID: ba08409359c3
Revises: a47e9dc8a2d0
Create Date: 2025-09-09 11:10:14.397582

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'ba08409359c3'
down_revision: Union[str, None] = 'a47e9dc8a2d0'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('chain_events',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('chain', sa.String(length=3), nullable=False),
    sa.Column('tx_sig', sa.Text(), nullable=False),
    sa.Column('log_idx', sa.Integer(), nullable=False),
    sa.Column('raw', sa.JSON(), nullable=False),
    sa.Column('processed_at', sa.DateTime(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_chain_events_chain', 'chain_events', ['chain'], unique=False)
    op.create_index('ix_chain_events_tx_log', 'chain_events', ['tx_sig', 'log_idx'], unique=True)
    op.create_table('deposit_intents',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('chain', sa.String(length=3), nullable=False),
    sa.Column('token_mint', sa.Text(), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('expected_min_u', sa.BigInteger(), nullable=False),
    sa.Column('address', sa.Text(), nullable=False),
    sa.Column('memo_tag', sa.Text(), nullable=True),
    sa.Column('tx_sig', sa.Text(), nullable=True),
    sa.Column('seen_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('confirmed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('credited_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('risk_score', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_deposit_intents_address_chain', 'deposit_intents', ['address', 'chain'], unique=True)
    op.create_index('ix_deposit_intents_chain_status', 'deposit_intents', ['chain', 'status'], unique=False)
    op.create_index('ix_deposit_intents_user_status', 'deposit_intents', ['user_id', 'status'], unique=False)
    op.create_table('sessions',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('jwt_id', sa.String(length=36), nullable=False),
    sa.Column('expires_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('jwt_id')
    )
    op.create_table('user_auth',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('password_hash', sa.Text(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('last_login_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('user_id')
    )
    op.create_table('withdrawal_requests',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('chain', sa.String(length=3), nullable=False),
    sa.Column('destination', sa.Text(), nullable=False),
    sa.Column('requested_u', sa.BigInteger(), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('broadcast_tx', sa.Text(), nullable=True),
    sa.Column('confirmations', sa.Integer(), nullable=False),
    sa.Column('min_confirmations', sa.Integer(), nullable=False),
    sa.Column('risk_score', sa.Integer(), nullable=False),
    sa.Column('admin_approved', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_withdrawal_requests_chain_status', 'withdrawal_requests', ['chain', 'status'], unique=False)
    op.create_index('ix_withdrawal_requests_user_status', 'withdrawal_requests', ['user_id', 'status'], unique=False)
    op.drop_index(op.f('ix_api_keys_key_hash'), table_name='api_keys')
    op.drop_table('api_keys')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('api_keys',
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), autoincrement=False, nullable=False),
    sa.Column('key_hash', sa.VARCHAR(length=64), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('role', sa.VARCHAR(length=20), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('last_used', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('is_active', sa.VARCHAR(length=10), server_default=sa.text("'true'::character varying"), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('api_keys_pkey')),
    sa.UniqueConstraint('key_hash', name=op.f('api_keys_key_hash_key'), postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    op.create_index(op.f('ix_api_keys_key_hash'), 'api_keys', ['key_hash'], unique=False)
    op.drop_index('ix_withdrawal_requests_user_status', table_name='withdrawal_requests')
    op.drop_index('ix_withdrawal_requests_chain_status', table_name='withdrawal_requests')
    op.drop_table('withdrawal_requests')
    op.drop_table('user_auth')
    op.drop_table('sessions')
    op.drop_index('ix_deposit_intents_user_status', table_name='deposit_intents')
    op.drop_index('ix_deposit_intents_chain_status', table_name='deposit_intents')
    op.drop_index('ix_deposit_intents_address_chain', table_name='deposit_intents')
    op.drop_table('deposit_intents')
    op.drop_index('ix_chain_events_tx_log', table_name='chain_events')
    op.drop_index('ix_chain_events_chain', table_name='chain_events')
    op.drop_table('chain_events')
    # ### end Alembic commands ###